%% start of file `academic.sty'.

%-------------------------------------------------------------------------------
%                identification
%-------------------------------------------------------------------------------
\NeedsTeXFormat{LaTeX2e}
\ProvidesPackage{academic}[2017/07/01 v1 modern curriculum vitae and letter style scheme: academic]

%-------------------------------------------------------------------------------
% Definitions
%-------------------------------------------------------------------------------

%switches for information
\newif\ifdetails\detailsfalse
\newif\if@citeall

%-------------------------------------------------------------------------------
% Options
%-------------------------------------------------------------------------------
\RequirePackage{pgfkeys}
\RequirePackage{pgffor}
\RequirePackage{pgfopts}
\RequirePackage{etoolbox}

% Package options
\def\unknown@packageoptions{}
\def\@load@style{}

\pgfkeys{%
  /academic/.cd,
  citeall/.is if={@citeall},
  citeall/.default=true,
  %
  details/.is if={details},
  details/.default=true,
  %
  style/.store in=\@load@style,
  style/.default=academic,
  %
  % unknown keys are assumed to be options to be passed to the amc package
  .unknown/.code={\edef\unknown@packageoptions{\unknown@packageoptions,\pgfkeyscurrentname=#1}},
}

% defaults
\pgfkeys{%
  /academic/.cd,
  % put defaults here
  citeall,
  details = false,
}

% process options key-value
\ProcessPgfPackageOptions{/academic}
\ifdefempty{\unknown@packageoptions}%
  {}%
  {\PackageWarning{academic}{Unknown options: '\unknown@packageoptions'}}


%https://tex.stackexchange.com/a/131413/7561
\newcommand*\csnewcommand{\@star@or@long\csnew@command}
\newcommand*\csnew@command[1]{\expandafter\new@command\csname#1\endcsname}
\newcommand*\recsnewcommand{\@star@or@long\recsnew@command}
\newcommand*\recsnew@command[1]{\expandafter\renew@command\csname#1\endcsname}

%-------------------------------------------------------------------------------
% Load style
%-------------------------------------------------------------------------------

% We need to load before patching the definitions
\ifdefempty{\@load@style}{\PackageWarning{academic}{No style to load}}{
  \moderncvstyle{\@load@style}
}

%-------------------------------------------------------------------------------
% Multilanguage support
%-------------------------------------------------------------------------------

% http://tex.stackexchange.com/a/42791/7561
\newcommand{\newlcommand}[1]{%
  \newcommand#1{%
    \@ifundefined{\string#1\languagename}
    {``No def of \texttt{\string#1} for \languagename''}
    {\@nameuse{\string#1\languagename}}%
  }%
}
\newcommand{\addtolanguagecommand}[3]{%
  \@namedef{\string#1#2}{#3}}

\pgfkeys{
  /mlcommands/.is family, /mlcommands,
  command/.code={\def\langcmd{#1}},
  .unknown/.code = {%    
    \expandafter\expandafter\expandafter\expandafter\expandafter\expandafter\expandafter\addtolanguagecommand\expandafter\expandafter\expandafter\expandafter\expandafter\expandafter\expandafter
    {\expandafter\expandafter\expandafter\langcmd\expandafter\expandafter\expandafter}%
    \expandafter\expandafter\expandafter{\expandafter\pgfkeyscurrentname\expandafter}\expandafter
    {#1}
  }%
}

\newcommand{\newmlcommand}[2][]{%
  \newlcommand#2%
  \pgfkeys{/mlcommands, command=#2, #1}%
}

% How to use
%\newlanguagecommand{\uno}
%\addtolanguagecommand{\uno}{english}{one}
%\addtolanguagecommand{\uno}{french}{une}
% or
% \newmlcommand[english=one, french=une]{\uno}

% Create long names for languages, this reuses the code from cv.bbx
% fixme: merge both definitions (here and cv.bbx)
\def\@cv@shortnamelist{}
\def\@cv@longnamelist{}
\def\@coma{}
\pgfkeys{%
  /shortlan/.is family, /shortlan,
  .unknown/.code = {%
    \edef\@cv@shortnamelist{\@cv@shortnamelist\@coma\pgfkeyscurrentname}%
    \edef\@cv@longnamelist{\@cv@longnamelist\@coma#1}%
    \def\@coma{,}%
    \expandafter\edef\csname @cv@short@#1\endcsname{\pgfkeyscurrentname}%
    \expandafter\expandafter\expandafter\edef\expandafter\csname @cv@long@\pgfkeyscurrentname\endcsname{#1}%
  }
}
% handler to create the keys
\def\babelshortnames#1{\def\@coma{}\pgfkeys{/shortlan, #1}}
% directly obtain the short name
\newcommand{\shortlanguagename}{\csname @cv@short@\languagename\endcsname}
\newcommand{\longlanguagename}[1]{\csname @cv@long@#1\endcsname}

% Setter for mappings
\def\@default@mappings{%
\foreach \@cv@lang in \@cv@longnamelist {%
  % define the mapping into a macro and then expand it
  \begingroup\edef\x{\endgroup\noexpand\DeclareLanguageMapping{\@cv@lang}{\@cv@lang-cv}}
  \x
}}

% Functions for creating the dbx
% \localized{text}{\macroToStoreInto}
\newcommand{\@cv@localize}[3][]{%
  \def\@coma{#1}
  \foreach \@cv@lang in \@cv@shortnamelist{%
    \global\edef#3{#3\@coma#2-\@cv@lang}%
    \global\def\@coma{,}%
  }%
}

\newcommand{\@cv@localizeList}[2]{%
  \def\@@coma{}
  \foreach \@word in #1{%
    \@cv@localize[\@@coma]{\@word}{#2}%
    \global\def\@@coma{,}%
  }%
}

\newcommand{\localizedmacro}[3][]{
  \ifdefmacro{#3}
    {\let\@list#3}
    {\def\@list{#3}}
  \def\@localized{}%
  \@cv@localizeList{\@list}{\@localized}%
  \begingroup\edef\x{\endgroup\noexpand#2[#1]{#3,\@localized}}%
  \x%
}

\newcommand{\DeclareLocalizedDatamodelFields}[2][]{%
  \localizedmacro[#1]{\DeclareDatamodelFields}{#2}%
}

\newcommand{\DeclareLocalizedDatamodelEntryfields}[2][]{%
  \localizedmacro[#1]{\DeclareDatamodelEntryfields}{#2}%
}

% declare default languages
% \babelshortnames{en=english, es=spanish}
% or imported to be in sync with cv.bbx
\input{setlanguages.sty}

% use a select language with short name instead of default long one
\newcommand{\selectshortlanguage}[1]{%
  \edef\mylang{\longlanguagename{#1}}%
  \expandafter\selectlanguage\expandafter{\mylang}%
}

%-------------------------------------------------------------------------------
% Academic drivers and sorting to use with this style
%-------------------------------------------------------------------------------

% If there is no custom datamodel, load defaul cv.dbx
\IfFileExists{cv-\@load@style.dbx}%
  {\def\@load@datamodel{cv-\@load@style}}%
  {\def\@load@datamodel{cv}}
  
\IfFileExists{cv-\@load@style.bbx}%
{\def\@load@bibstyle{cv-\@load@style}}%
{%
  \def\@load@bibstyle{cv}%
  \PackageWarning{academic}{The bibstyle 'cv-\@load@style.bbx' wasn't found. I'm loading the default 'cv.bbx' instead.}%
}


\RequirePackage[backend=biber, citestyle=numeric-comp, bibstyle=\@load@bibstyle, datamodel=\@load@datamodel, sorting=ymdtn, maxbibnames=99, defernumbers=true, giveninits=true, sortcites]{biblatex}


% Execute mappings (these must be after biblatex loaded, since we will use the \DeclareLangaugeMapping macro)
\@default@mappings
\@custom@mappings

% Patch endyears that are not declared
% http://tex.stackexchange.com/a/327884/7561
% Leave presentation out of this, because it uses \printdate. 
% Patching endyear for presentation results in single dates (YYYY-MM-DD) to appear as Oct 4-4, 2010.
\DeclareSourcemap{
  \maps[datatype=bibtex]{
    \map{
      \pertype{study}
      \pertype{position}
      \pertype{project}
      \pertype{course}
      \pertype{thesis}
      \pertype{committee}
      \pertype{cvmisc}
      \step[fieldsource=date, match=\regexp{\A([0-9]{4}-[0-9]{2}-[0-9]{2})\Z}, replace=\regexp{$1/$1}]
      \step[fieldsource=date, match=\regexp{\A([0-9]{4}-[0-9]{2})\Z}, replace=\regexp{$1/$1}]
      \step[fieldsource=date, match=\regexp{\A([0-9]{4})\Z}, replace=\regexp{$1/$1}]
    }
  }
}

% Custom sort to include month and endyear
\DeclareSortingScheme{ymdtn}{
  \sort{
    \field{presort}
  }
  \sort[final]{
    \field{sortkey}
  }
  \sort[direction=descending]{
    \field{sortyear}
    \field{endyear} % Use endyear if defined,
    \field{year}    % otherwise use year if that is defined
    \literal{9999}
  }
  \sort[direction=descending]{
    \field[padside=left,padwidth=2,padchar=0]{month}
    \literal{99}
  }
  \sort[direction=descending]{
    \field[padside=left,padwidth=2,padchar=0]{day}
    \literal{99}
  }
  \sort{
    \field{sorttitle}
  }
  \sort[direction=descending]{
    \field[padside=left,padwidth=4,padchar=0]{volume}
    \literal{9999}
  }
  \sort{
    \field{sortname}
    \field{author}
    \field{editor}
    \field{translator}
    \field{sorttitle}
    \field{title}
  }
}

% Bolding names using hashes
% https://tex.stackexchange.com/a/416416/7561
\RequirePackage{xpatch}
\def\hlblx@ensuredocument#1{%
  \ifx\@onlypreamble\@notprerr
  #1%
  \else
  \AtBeginDocument{#1}%
  \fi
}

\def\hlblx@bibfile@name{\jobname -boldnames.bib}
\newwrite\hlblx@bibfile
\immediate\openout\hlblx@bibfile=\hlblx@bibfile@name

\newcounter{hlblx@name}
\setcounter{hlblx@name}{0}

\newcommand*{\hlblx@writenametobib}[1]{%
  \stepcounter{hlblx@name}%
  \edef\hlblx@tmp@nocite{%
    \noexpand\hlblx@ensuredocument{%
      \noexpand\setbox0\noexpand\vbox{%
        \noexpand\hlblx@getmethehash{hlblx@name@\the\value{hlblx@name}}}}%
  }%
  \hlblx@tmp@nocite
  \immediate\write\hlblx@bibfile{%
    @misc{hlblx@name@\the\value{hlblx@name}, author = {\unexpanded{#1}}, %
      options = {dataonly=true},}%
  }%
}

\AtEndDocument{%
  \closeout\hlblx@bibfile}

\addbibresource{\hlblx@bibfile@name}

\newcommand*{\hlbxl@boldhashes}{}
\DeclareNameFormat{hlblx@hashextract}{%
  \xifinlist{\thefield{hash}}{\hlbxl@boldhashes}
  {}
  {\listxadd{\hlbxl@boldhashes}{\thefield{fullhash}}}}

\DeclareCiteCommand{\hlblx@getmethehash}
{}
{\printnames[hlblx@hashextract][1-999]{author}}
{}
{}

\newbibmacro*{name:bold}[2]{%
  \def\do##1{\iffieldequalstr{hash}{##1}{\bfseries\listbreak}{}}%
  \dolistloop{\hlbxl@boldhashes}%
}

\xpretobibmacro{name:family}{\begingroup\usebibmacro{name:bold}{#1}{#2}}{}{}
\xpretobibmacro{name:given-family}{\begingroup\usebibmacro{name:bold}{#1}{#2}}{}{}
\xpretobibmacro{name:family-given}{\begingroup\usebibmacro{name:bold}{#1}{#2}}{}{}
\xpretobibmacro{name:delim}{\begingroup\normalfont}{}{}

\xapptobibmacro{name:family}{\endgroup}{}{}
\xapptobibmacro{name:given-family}{\endgroup}{}{}
\xapptobibmacro{name:family-given}{\endgroup}{}{}
\xapptobibmacro{name:delim}{\endgroup}{}{}


% User macros
\newcommand*{\addboldnames}{\forcsvlist\hlblx@writenametobib}
\newcommand*{\resetboldnames}{\def\hlbxl@boldhashes{}}

% Mantained for backwards compatibility
\newcommand*{\boldname}[3]{%
  \PackageWarning{academic}{The macro '\protect\boldname' is deprecated.  Use '\protect\addboldnames' to declare the names to bold as a coma-separated-value list, and '\protect\resetboldnames' to clear that list.}
  \addboldnames{{#2 #1},{#3 #1}}}



% We need to tell biblatex to check for all entries
\if@citeall
\nocite{*}
\fi



%-------------------------------------------------------------------------------
% Factory for the printbibliography replacements
%-------------------------------------------------------------------------------

\newcommand{\defprint}[3][env=nobibenv]{%
  \csdef{print#3}[##1]{%
    \letcs\refname{\abx@str @#3}%
    \letcs\bibname{\abx@str @#3}%
    \printbibliography[#1, type=#2, ##1]%
    \letcs\refname{\abx@str @references}%
    \letcs\bibname{\abx@str @bibliography}
  }%
}

\defprint{course}{courses}
\defprint{study}{studies}
\defprint{position}{positions}
\defprint{thesis}{theses}
\defprint[resetnumbers=true]{project}{projects}
\defprint{cvmisc}{cvmiscs}
\defprint[resetnumbers=true]{presentation}{presentations}

%-------------------------------------------------------------------------------
% Patching moderncv
%-------------------------------------------------------------------------------

% Patch socials
\RenewDocumentCommand{\social}{O{}O{}m}{%
  \ifthenelse{\equal{#2}{}}%
  {%
    \ifthenelse{\equal{#1}{linkedin}}{\collectionadd[linkedin]{socials}{\protect\httplink[#3]{www.linkedin.com/in/#3}}}{}%
    \ifthenelse{\equal{#1}{twitter}} {\collectionadd[twitter]{socials} {\protect\httplink[#3]{www.twitter.com/#3}}} {}%
    \ifthenelse{\equal{#1}{github}}  {\collectionadd[github]{socials}  {\protect\httplink[#3]{www.github.com/#3}}} {}%
    \ifthenelse{\equal{#1}{scholar}} {\collectionadd[scholar]{socials} {\protect\httplink[Google Scholar]{http://scholar.google.com/citations?user=#3}}} {}%
  }
  {\collectionadd[#1]{socials}{\protect\httplink[#3]{#2}}}}

\endinput